#!/bin/bash -x

###############################################################################
#
# Copyright 2022 NVIDIA Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
###############################################################################

DOCA_VERSION=@DOCA_VERSION@
MLNX_OFED_VERSION=@MLNX_OFED_VERSION@
BF_RELEASE=@BF_RELEASE@
DISTRO_VERSION=@DISTRO_VERSION@
#DOCA_VERSION="1.5.1010"
#BF_RELEASE="3.9.5-12666"
#MLNX_OFED_VERSION=5.9-0.5.6.0
WDIR=${WDIR:-/tmp}

# Execute command w/ echo and exit if it fail
ex()
{
	echo "$@"
	if ! "$@"; then
		printf "\nFailed executing $@\n\n"
		exit 1
	fi
}


dnf update -y
dnf install dnf-plugins-core -y
yum-config-manager --nogpgcheck --add-repo https://mirrors.cmecloud.cn/bclinux/oe21.10U3/everything/aarch64
yum-config-manager --nogpgcheck --add-repo https://linux.mellanox.com/public/repo/doca/${DOCA_VERSION}/openeuler20.03/aarch64/
yum-config-manager --nogpgcheck --add-repo https://mirrors.cmecloud.cn/bclinux/oe21.10/kernel-oe/aarch64

dnf install -y --disableexcludes=kubernetes \
	rpm-build rpm-sign automake cmake gcc-c++ \
	bc bison flex pesign rsync patchutils git annobin intltool \
	groff kernel-rpm-macros libtool desktop-file-utils jq wget \
	systemd lm_sensors-sensord openssh-server acpid irqbalance unbound rasdaemon \
	cryptsetup lvm2 device-mapper-persistent-data ltrace lsof unzip sysstat nvme-cli \
	usbutils kexec-tools nfs-utils dracut-tools iproute-tc sudo parted passwd \
	network-scripts tcpdump NetworkManager NetworkManager-ovs NetworkManager-config-server glib2-devel\
        libarchive adobe-mappings-cmap-lang ImageMagick \
	perl-Fedora-VSP perl-generators \
	python3-Cython python3-sphinx python3-pyelftools \
	python3 python3-devel elfutils-devel binutils-devel pciutils-devel \
	libnl3-devel selinux-policy-devel numactl-devel unbound-devel libpcap-devel tcl-devel \
	valgrind-devel iptables-devel libdb-devel libmnl-devel libcap-ng-devel systemd-devel \ 
        binutils sg3_utils libnl3 libmnl perl \
        python-netifaces numactl perf popt-devel  edac-utils lm_sensors  \
        grub2-tools grubby grub2-tools-minimal grub2-common \
        rsync bison flex grub2-tools-extra \
        device-mapper-persistent-data lvm2 acpid bc lm_sensors-sensord \
        cryptsetup rasdaemon pciutils-devel kexec-tools jq \
        python3-pip libnghttp2 wget tar rpm-build python2 python2-devel \
        shim grub2 grub2-efi-aa64 grub2-efi-aa64-modules efibootmgr \
        autoconf ethtool gdb-headless make pciutils python3-devel gcc patch \
	https://download.fedoraproject.org/pub/epel/8/Everything/aarch64/Packages/l/libmd-1.0.4-2.el8.aarch64.rpm \
	https://download.fedoraproject.org/pub/epel/8/Everything/aarch64/Packages/l/libmd-devel-1.0.4-2.el8.aarch64.rpm \
	https://download.fedoraproject.org/pub/epel/8/Everything/aarch64/Packages/l/libbsd-devel-0.11.7-2.el8.aarch64.rpm \
	https://download.fedoraproject.org/pub/epel/8/Everything/aarch64/Packages/l/libbsd-0.11.7-2.el8.aarch64.rpm \
	https://download.fedoraproject.org/pub/epel/7/aarch64/Packages/l/lcov-1.13-1.el7.noarch.rpm \
	https://download.fedoraproject.org/pub/epel/7/aarch64/Packages/r/re2c-0.14.3-2.el7.aarch64.rpm \
	https://vault.centos.org/centos/8/BaseOS/aarch64/os/Packages/watchdog-5.15-2.el8.aarch64.rpm \
        https://download-ib01.fedoraproject.org/pub/epel/8/Everything/aarch64/Packages/u/uriparser-0.9.7-1.el8.aarch64.rpm \
        https://download-ib01.fedoraproject.org/pub/epel/8/Everything/aarch64/Packages/u/uriparser-devel-0.9.7-1.el8.aarch64.rpm \
        https://mirrors.cmecloud.cn/bclinux/oe21.10U3/everything/aarch64/Packages/libreswan-4.1-2.oe1.aarch64.rpm  \
        https://mirrors.cmecloud.cn/bclinux/oe21.10U3/everything/aarch64/Packages/openssl-devel-1.1.1f-13.oe1.aarch64.rpm \
        https://mirrors.cmecloud.cn/bclinux/oe21.10U3/everything/aarch64/Packages/openssl-1.1.1f-13.oe1.aarch64.rpm \
        https://mirrors.cmecloud.cn/bclinux/oe21.10U3/everything/aarch64/Packages/efi-filesystem-4-4.oe1.bclinux.noarch.rpm \
        https://mirrors.cmecloud.cn/bclinux/oe21.10U3/everything/aarch64/Packages/ninja-build-1.8.2-8.oe1.aarch64.rpm

ex dnf install -y kernel-4.19.90-2211.6.0.0179.oe1.aarch64 kernel-devel-4.19.90-2211.6.0.0179.oe1.aarch64

#kernel=`/bin/ls -1tr /lib/modules | tail -1`
kernel=4.19.90-2211.6.0.0179.oe1.aarch64

dnf reinstall crypto-policies -y

# Set python2.7 as a default
update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1
update-alternatives --install /usr/bin/python python /usr/bin/python2.7 10

mkdir -p $WDIR
cd $WDIR

# Build and install MLNX_OFED drivers

#ex wget https://linux.mellanox.com/public/repo/mlnx_ofed/${MLNX_OFED_VERSION}/MLNX_OFED_SRC-${MLNX_OFED_VERSION}.tgz
ex wget --quiet https://linux.mellanox.com/public/repo/bluefield/${BF_RELEASE}/extras/mlnx_ofed/${MLNX_OFED_VERSION}/MLNX_OFED_SRC-${MLNX_OFED_VERSION}.tgz
ex tar xzf MLNX_OFED_SRC-${MLNX_OFED_VERSION}.tgz

ex sed -i.orig -e "s/release.oe1.bclinux/release/" MLNX_OFED_SRC-${MLNX_OFED_VERSION}/install.pl
echo '%dist %{nil}' > /root/.rpmmacros
ex MLNX_OFED_SRC-${MLNX_OFED_VERSION}/install.pl -k $kernel --kernel-extra-args '--with-sf-cfg-drv --without-xdp --without-odp' --kernel-only --disable-kmp || true

/bin/rm -f /root/.rpmmacros

# Build and install BlueField SoC drivers
ex wget -r -np -nH --cut-dirs=3 -R "index.html*" https://linux.mellanox.com/public/repo/bluefield/${BF_RELEASE}/extras/SRPMS/
mkdir -p ${WDIR}/${BF_RELEASE}/extras/{SPECS,RPMS,SOURCES,BUILD}

for p in ${WDIR}/${BF_RELEASE}/extras/SRPMS/*.src.rpm
do
	case $p in
		*rshim* | *libpka* | *mlx-OpenIPMI* | *mlxbf-bootctl*)
			continue
			;;
	esac
	ex rpmbuild --rebuild -D "debug_package %{nil}" -D "KVERSION $kernel" --define "KMP 0" --define "_topdir ${WDIR}/${BF_RELEASE}/extras" $p
done

ex rpm -ivh --force ${WDIR}/${BF_RELEASE}/extras/RPMS/aarch64/*.rpm

ex yum install --nogpgcheck -y doca-runtime-user doca-sdk-user doca-tools
ex dnf install --nogpgcheck -y mstflint
ex dnf install --nogpgcheck -y mlnx-snap

ex rpm -ihv --force /root/workspace/bootimages/mlxbf-bootimages-*.aarch64*.rpm || true

systemctl enable openvswitch

/usr/sbin/update-pciids || true

sed -i -e "s/openeuler_20.03sp1/BCLinux21.10/" /etc/mlnx-release
sed -i -e "s/signed/@IMAGE_TYPE@@CUSTOM_VERSION@/;s/prod/@IMAGE_TYPE@@CUSTOM_VERSION@/" /etc/mlnx-release

ex /root/workspace/create_bfb -k $kernel
