#!/bin/bash -e

cd ${0%*/*}

if [ ! -e Dockerfile ]; then
	echo "ERROR: Dockerfile is missing."
	exit 1
fi

if ! (which wget > /dev/null 2>&1); then
	echo "wget is required to build BFB"
	exit 1
fi

if ! (which docker > /dev/null 2>&1); then
	echo "docker is required to build BFB"
	exit 1
fi

DISTRO="ubuntu"
DISTRO_VERSION="20.04"
DISTRO_BASE_URL="http://cloud-images.ubuntu.com/releases/focal/release/${DISTRO}-${DISTRO_VERSION}-server-cloudimg-arm64-root.tar.xz"
ARCH=${ARCH:-"arm64-dpu"}
DOCA_VERSION="1.5.5"
BSP_VERSION="3.9.10-13665"
IMAGE_TYPE=${IMAGE_TYPE:-"prod"}
CUSTOM_VERSION=${CUSTOM_VERSION:-""}

WDIR=/tmp/${DISTRO}${DISTRO_VERSION}.$$
BASE_URL=${BASE_URL:-"https://linux.mellanox.com/public/repo"}

mkdir -p $WDIR

echo "Downloading bootimages..."
mkdir -p $WDIR/bootimages

case "$IMAGE_TYPE" in
	prod)
		bootimages="mlxbf-bootimages-signed_${BSP_VERSION}_arm64.deb"
		;;
	dev)
		bootimages="mlxbf-bootimages-devsigned_${BSP_VERSION}_arm64.deb"
		;;
	unsigned)
		bootimages="mlxbf-bootimages_${BSP_VERSION}_arm64.deb"
		;;
esac

wget -q -P $WDIR/bootimages/ ${BASE_URL}/doca/${DOCA_VERSION}/${DISTRO}${DISTRO_VERSION}/${ARCH}/$bootimages
mv $WDIR/bootimages/mlxbf-bootimages*arm64.deb $WDIR/bootimages/mlxbf-bootimages.deb

cp	Dockerfile \
	create_bfb \
	install.sh \
	../../common/tools/qemu-aarch64-static \
	$WDIR

cd $WDIR

echo "Downloading ${DISTRO_BASE_URL}..."
wget -q  $DISTRO_BASE_URL
docker_image=bfb_runtime_${DISTRO,,}${DISTRO_VERSION,,}

docker rm -f BlueField_OS_${DISTRO}_${DISTRO_VERSION} 2> /dev/null

sed -i -e "s/@IMAGE_TYPE@/$IMAGE_TYPE/;s/@CUSTOM_VERSION@/$CUSTOM_VERSION/" Dockerfile

docker build -t ${docker_image} \
	--build-arg BASE_URL=$BASE_URL \
	--build-arg DOCA_VERSION=$DOCA_VERSION \
	--build-arg BSP_VERSION=$BSP_VERSION \
	-f Dockerfile .

docker run -t --rm --privileged -e container=docker \
	-v $PWD:/workspace \
	--name BlueField_OS_${DISTRO}_${DISTRO_VERSION} \
	--mount type=bind,source=/dev,target=/dev \
	--mount type=bind,source=/sys,target=/sys \
	--mount type=bind,source=/proc,target=/proc \
	${docker_image}

readlink -f *.bfb

echo "Default user ubuntu password is: ubuntu"
